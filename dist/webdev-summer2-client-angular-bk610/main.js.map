{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/enrollment/enrollment.component.css","webpack:///./src/app/enrollment/enrollment.component.html","webpack:///./src/app/enrollment/enrollment.component.ts","webpack:///./src/app/essay-question/essay-question.component.css","webpack:///./src/app/essay-question/essay-question.component.html","webpack:///./src/app/essay-question/essay-question.component.ts","webpack:///./src/app/fill-blanks-question/fill-blanks-question.component.css","webpack:///./src/app/fill-blanks-question/fill-blanks-question.component.html","webpack:///./src/app/fill-blanks-question/fill-blanks-question.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/multiple-choice-question/multiple-choice-question.component.css","webpack:///./src/app/multiple-choice-question/multiple-choice-question.component.html","webpack:///./src/app/multiple-choice-question/multiple-choice-question.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/quiz-list/quiz-list.component.css","webpack:///./src/app/quiz-list/quiz-list.component.html","webpack:///./src/app/quiz-list/quiz-list.component.ts","webpack:///./src/app/quiz-taker/quiz-taker.component.css","webpack:///./src/app/quiz-taker/quiz-taker.component.html","webpack:///./src/app/quiz-taker/quiz-taker.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/sections/sections.component.css","webpack:///./src/app/sections/sections.component.html","webpack:///./src/app/sections/sections.component.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/quiz.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/true-false-question/true-false-question.component.css","webpack:///./src/app/true-false-question/true-false-question.component.html","webpack:///./src/app/true-false-question/true-false-question.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <h1>Welcome to WhiteBoard</h1>\\r\\n\\r\\n  <!--<a routerLink=\\\"quizzes\\\">Quizzes</a> |-->\\r\\n  <a routerLink=\\\"home\\\">Home</a> |\\r\\n  <a routerLink=\\\"enrollments\\\">Enrollments (delete)</a> |\\r\\n  <a routerLink=\\\"sections\\\">Sections (delete)</a> |\\r\\n  <span *ngIf=\\\"currentUser.username === 'null'\\\">\\r\\n    <a routerLink=\\\"login\\\">\\r\\n      Login\\r\\n    </a>\\r\\n    |\\r\\n  </span>\\r\\n  <a *ngIf=\\\"currentUser.username !== 'null'\\\"\\r\\n     (click)=\\\"logout()\\\"\\r\\n     routerLink=\\\"login\\\">Logout</a>\\r\\n  <a *ngIf=\\\"currentUser.username === 'null'\\\"\\r\\n     routerLink=\\\"register\\\">Register</a> |\\r\\n  <a routerLink=\\\"profile\\\">Profile</a>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserServiceClient} from './services/user.service.client';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app';\r\n  currentUser = {\r\n    username: 'null'\r\n  };\r\n\r\n  constructor(private userService: UserServiceClient,\r\n              private router: Router) {\r\n  }\r\n\r\n  logout() {\r\n    this.userService.logout()\r\n      .then(() => {\r\n        this.currentUser = {\r\n          username: 'null'\r\n        };\r\n        this.router.navigate(['/login']);\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService.currentUser()\r\n      .then((user) => this.currentUser = user);\r\n  }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {routing} from './app.routing';\r\n\r\nimport {CourseServiceClient} from './services/course.service.client';\r\nimport {CourseNavigatorComponent} from './course-navigator/course-navigator.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {UserServiceClient} from './services/user.service.client';\r\nimport {SectionsComponent} from './sections/sections.component';\r\nimport {SectionServiceClient} from './services/section.service.client';\r\nimport {EnrollmentComponent} from './enrollment/enrollment.component';\r\nimport {QuizListComponent} from './quiz-list/quiz-list.component';\r\nimport {QuizServiceClient} from './services/quiz.service.client';\r\nimport {QuizTakerComponent} from './quiz-taker/quiz-taker.component';\r\nimport {TrueFalseQuestionComponent} from './true-false-question/true-false-question.component';\r\nimport {FillBlanksQuestionComponent} from './fill-blanks-question/fill-blanks-question.component';\r\nimport {MultipleChoiceQuestionComponent} from './multiple-choice-question/multiple-choice-question.component';\r\nimport {EssayQuestionComponent} from './essay-question/essay-question.component';\r\nimport {HomeComponent} from './home/home.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CourseNavigatorComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ProfileComponent,\r\n    SectionsComponent,\r\n    EnrollmentComponent,\r\n    QuizListComponent,\r\n    QuizTakerComponent,\r\n    TrueFalseQuestionComponent,\r\n    FillBlanksQuestionComponent,\r\n    MultipleChoiceQuestionComponent,\r\n    EssayQuestionComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    routing\r\n  ],\r\n  providers: [\r\n    CourseServiceClient,\r\n    UserServiceClient,\r\n    SectionServiceClient,\r\n    QuizServiceClient\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Routes, RouterModule} from '@angular/router';\r\nimport {CourseNavigatorComponent} from './course-navigator/course-navigator.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {SectionsComponent} from './sections/sections.component';\r\nimport {EnrollmentComponent} from './enrollment/enrollment.component';\r\nimport {QuizListComponent} from './quiz-list/quiz-list.component';\r\nimport {QuizTakerComponent} from './quiz-taker/quiz-taker.component';\r\nimport {HomeComponent} from './home/home.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'enrollments', component: EnrollmentComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'courses/:courseId', component: CourseNavigatorComponent},\r\n  {path: 'sections', component: SectionsComponent},\r\n  {path: 'quizzes', component: QuizListComponent},\r\n  {path: 'quiz/:quizId', component: QuizTakerComponent}\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-4\\\">\\r\\n    <h2>Modules</h2>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li (click)=\\\"selectModule(module)\\\"\\r\\n          *ngFor=\\\"let module of modules\\\"\\r\\n          [ngClass]=\\\"{'active': module === selectedModule}\\\"\\r\\n          class=\\\"list-group-item\\\">\\r\\n        {{module.title}}\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"col-8\\\">\\r\\n    <h2>Lessons</h2>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li (click)=\\\"selectLesson(lesson)\\\"\\r\\n          *ngFor=\\\"let lesson of selectedModule.lessons\\\"\\r\\n          [ngClass]=\\\"{'active': lesson === selectedLesson}\\\"\\r\\n          class=\\\"list-group-item\\\">\\r\\n        {{lesson.title}}\\r\\n      </li>\\r\\n    </ul>\\r\\n    <h3>Widgets</h3>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <div *ngFor=\\\"let widget of selectedLesson.widgets\\\"\\r\\n           class=\\\"list-group-item\\\">\\r\\n        {{widget.title}}\\r\\n        <li *ngIf=\\\"widget.widgetType == 'HEADING_WIDGET'\\\"\\r\\n            class=\\\"list-group-item\\\">\\r\\n          <h1 *ngIf=\\\"widget.size == 1\\\">\\r\\n            {{widget.text}}\\r\\n          </h1>\\r\\n          <h2 *ngIf=\\\"widget.size == 2\\\">\\r\\n            {{widget.text}}\\r\\n          </h2>\\r\\n          <h3 *ngIf=\\\"widget.size == 3\\\">\\r\\n            {{widget.text}}\\r\\n          </h3>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"widget.widgetType == 'PARAGRAPH_WIDGET'\\\"\\r\\n            class=\\\"list-group-item\\\">\\r\\n          <p>\\r\\n            {{widget.text}}\\r\\n          </p>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"widget.widgetType == 'LIST_WIDGET'\\\"\\r\\n            class=\\\"list-group-item\\\">\\r\\n          <div *ngIf=\\\"widget.listType == 'ul'\\\">\\r\\n            <ul *ngFor=\\\"let item of newLineSplit(widget.text)\\\">\\r\\n              <li>\\r\\n                {{item}}\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"widget.listType == 'ol'\\\">\\r\\n            <ol *ngFor=\\\"let item of newLineSplit(widget.text)\\\">\\r\\n              <li>\\r\\n                {{widget.listItems}}\\r\\n              </li>\\r\\n            </ol>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"widget.widgetType == 'IMAGE_WIDGET'\\\"\\r\\n            class=\\\"list-group-item\\\">\\r\\n          <img src=\\\"{{widget.url}}\\\"\\r\\n               height=\\\"300\\\"\\r\\n               width=\\\"300\\\"/>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"widget.widgetType == 'LINK_WIDGET'\\\">\\r\\n          Unsupported widget type.\\r\\n        </li>\\r\\n      </div>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {ActivatedRoute, Params} from '@angular/router';\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {CourseServiceClient} from '../services/course.service.client';\r\nimport {UserServiceClient} from '../services/user.service.client';\r\n\r\n@Component({\r\n  selector: 'app-course-navigator',\r\n  templateUrl: './course-navigator.component.html',\r\n  styleUrls: ['./course-navigator.component.css']\r\n})\r\nexport class CourseNavigatorComponent implements OnInit {\r\n  user = {};\r\n  courseId = {};\r\n  modules = [];\r\n  selectedModule = {\r\n    lessons: []\r\n  };\r\n  selectedLesson = {\r\n    widgets: []\r\n  };\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private courseService: CourseServiceClient,\r\n              private userService: UserServiceClient) {\r\n  }\r\n\r\n  selectModule(module) {\r\n    this.selectedModule = module;\r\n    this.selectedLesson = {widgets: []};\r\n  }\r\n\r\n  selectLesson(lesson) {\r\n    this.selectedLesson = lesson;\r\n  }\r\n\r\n  newLineSplit(text) {\r\n    return text.split('\\n');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe((params: Params) => {\r\n      this.courseId = params['courseId'];\r\n    });\r\n\r\n    this.courseService\r\n      .findAllModulesForCourse(this.courseId)\r\n      .then(modules => this.modules = modules)\r\n      .then(() => this.userService.currentUser()\r\n        .then((user) => this.user = user));\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>Enrollments</h2>\\r\\n\\r\\n<ul class=\\\"list-group\\\">\\r\\n  <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\r\\n    {{section.title}}, <b>{{section.seats}}</b> seats remaining\\r\\n    <button class=\\\"float-right\\\" (click)=\\\"enroll(section._id)\\\">Enroll</button>\\r\\n  </li>\\r\\n</ul>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {SectionServiceClient} from '../services/section.service.client';\r\nimport {UserServiceClient} from '../services/user.service.client';\r\n\r\n@Component({\r\n  selector: 'app-enrollment',\r\n  templateUrl: './enrollment.component.html',\r\n  styleUrls: ['./enrollment.component.css']\r\n})\r\nexport class EnrollmentComponent implements OnInit {\r\n\r\n  sections = [];\r\n  currentUser = {\r\n    _id: 0,\r\n  };\r\n\r\n  constructor(private sectionService: SectionServiceClient,\r\n              private userService: UserServiceClient) {\r\n  }\r\n\r\n  enroll = (sectionId) => {\r\n    this.sectionService.enroll(this.currentUser._id, sectionId)\r\n      .then(response => response.json());\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.sectionService\r\n      .findAllSections()\r\n      .then(sections => {\r\n        this.sections = sections;\r\n        this.userService.currentUser()\r\n          .then(user => this.currentUser = user);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<textarea [(ngModel)]=\\\"question.essayAnswer\\\" class=\\\"form-control\\\"></textarea>\\r\\n\\r\\n{{question.essayAnswer}}\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-essay-question',\r\n  templateUrl: './essay-question.component.html',\r\n  styleUrls: ['./essay-question.component.css']\r\n})\r\nexport class EssayQuestionComponent implements OnInit {\r\n\r\n  @Input() question;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<span [ngSwitch]=\\\"blank.indexOf('*')\\\" *ngFor=\\\"let blank of question.blanks\\\">\\r\\n  <span *ngSwitchCase=\\\"-1\\\">{{blank}}</span>\\r\\n  <span *ngSwitchCase=\\\"0\\\">\\r\\n    <input [(ngModel)]=\\\"question.fillBlanksAnswers[blank.split('=')[0].replace('*','')]\\\"\\r\\n           placeholder=\\\"{{blank.split('=')[0].replace('*','')}}\\\"\\r\\n           style=\\\"border-color:black\\\">\\r\\n  </span>\\r\\n</span>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-fill-blanks-question',\r\n  templateUrl: './fill-blanks-question.component.html',\r\n  styleUrls: ['./fill-blanks-question.component.css']\r\n})\r\nexport class FillBlanksQuestionComponent implements OnInit {\r\n\r\n  @Input() question;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.question.fillBlanksAnswers = {};\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <h2>Available Courses</h2>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li [ngClass]=\\\"{'active': course.id == selectedCourse._id}\\\"\\r\\n          *ngFor=\\\"let course of courses\\\"\\r\\n          class=\\\"list-group-item\\\">\\r\\n        <p>\\r\\n          {{course.title}}\\r\\n        </p>\\r\\n        <div>\\r\\n          <button [routerLink]=\\\"['/courses/', course.id]\\\">\\r\\n            View\\r\\n          </button>\\r\\n          <button [routerLink]=\\\"['/sections/']\\\">\\r\\n            Enroll\\r\\n          </button>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {CourseServiceClient} from '../services/course.service.client';\r\nimport {UserServiceClient} from '../services/user.service.client';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  courses = [];\r\n  selectedCourse = {\r\n    _id: ''\r\n  };\r\n  user = {};\r\n  constructor(private router: Router,\r\n              private courseService: CourseServiceClient,\r\n              private userService: UserServiceClient) {\r\n  }\r\n\r\n  navigateToCourse(course) {\r\n    this.selectedCourse = course;\r\n    const url = '/courses/' + course.id;\r\n    this.router.navigate([url]);\r\n  }\r\n  navigateToEnrollment(course) {\r\n    this.selectedCourse = course;\r\n    const url = '/sections/' + course.id;\r\n    this.router.navigate([url]);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.courseService.findAllCourses()\r\n      .then((courses) => this.courses = courses);\r\n\r\n    this.userService.currentUser()\r\n      .then((user) => this.user = user);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>Login</h2>\\r\\n<input [(ngModel)]=\\\"username\\\"\\r\\n       placeholder=\\\"Username\\\"\\r\\n       class=\\\"form-control\\\"/>\\r\\n<input [(ngModel)]=\\\"password\\\"\\r\\n       placeholder=\\\"Password\\\"\\r\\n       class=\\\"form-control\\\"/>\\r\\n<button (click)=\\\"login(username, password)\\\"\\r\\n        class=\\\"btn btn-primary btn-block\\\">\\r\\n  Login\\r\\n</button>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserServiceClient} from '../services/user.service.client';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: String;\r\n  password: String;\r\n\r\n  constructor(private router: Router,\r\n              private userService: UserServiceClient) {\r\n  }\r\n\r\n  login = (username, password) => {\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    this.userService.login(user)\r\n      .then(status => {\r\n        if (status === 200) {\r\n          this.router.navigate(['profile']);\r\n        } else {\r\n          alert('Failed to login.');\r\n        }\r\n      });\r\n  };\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<ul class=\\\"list-group\\\">\\r\\n  <li *ngFor=\\\"let choice of question.choices\\\"\\r\\n      class=\\\"list-group-item\\\">\\r\\n    <label>\\r\\n      <input (click)=\\\"selected(choice)\\\" name=\\\"{{question._id}}\\\"\\r\\n             type=\\\"radio\\\">\\r\\n      {{choice.text}}\\r\\n    </label>\\r\\n  </li>\\r\\n</ul>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-multiple-choice-question',\r\n  templateUrl: './multiple-choice-question.component.html',\r\n  styleUrls: ['./multiple-choice-question.component.css']\r\n})\r\nexport class MultipleChoiceQuestionComponent implements OnInit {\r\n\r\n  @Input() question;\r\n\r\n  constructor() { }\r\n\r\n  selected = choice => {\r\n    this.question.multipleChoiceAnswer = this.question.choices.indexOf(choice);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>Welcome {{currentUser.username}}</h2>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class='col-6'>\\r\\n      <h3>\\r\\n        Profile\\r\\n      </h3>\\r\\n      <div *ngIf=\\\"currentUser.role === 'admin'\\\"\\r\\n           class=\\\"float-right\\\">\\r\\n        <button class='btn btn-primary'\\r\\n                routerLink=\\\"/admin\\\">\\r\\n          Admin Editor\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"username\\\"\\r\\n               class=\\\"col-lg-2 col-form-label\\\">\\r\\n          Username\\r\\n        </label>\\r\\n        <div class=\\\"col-lg-10\\\"\\r\\n             id=\\\"username\\\">\\r\\n          <input [(ngModel)]='username'\\r\\n                 type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 value={{currentUser.username}}>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"firstName\\\"\\r\\n               class=\\\"col-lg-2 col-form-label\\\">\\r\\n          First Name\\r\\n        </label>\\r\\n        <div class=\\\"col-lg-10\\\"\\r\\n             id=\\\"firstName\\\">\\r\\n          <input [(ngModel)]='firstName'\\r\\n                 type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 value={{currentUser.firstName}}>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"lastName\\\"\\r\\n               class=\\\"col-lg-2 col-form-label\\\">\\r\\n          Last Name\\r\\n        </label>\\r\\n        <div class=\\\"col-lg-10\\\"\\r\\n             id=\\\"lastName\\\">\\r\\n          <input [(ngModel)]='lastName'\\r\\n                 type=\\\"text\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 value={{currentUser.lastName}}>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"phone\\\"\\r\\n               class=\\\"col-lg-2 col-form-label\\\">\\r\\n          Phone\\r\\n        </label>\\r\\n        <div class=\\\"col-lg-10\\\"\\r\\n             id=\\\"phone\\\">\\r\\n          <input [(ngModel)]='phone'\\r\\n                 class=\\\"form-control\\\"\\r\\n                 placeholder=\\\"phone\\\"\\r\\n                 value={{currentUser.phone}}>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"email\\\"\\r\\n               class=\\\"col-lg-2 col-form-label\\\">\\r\\n          Email\\r\\n        </label>\\r\\n        <div class=\\\"col-lg-10\\\"\\r\\n             id=\\\"email\\\">\\r\\n          <input [(ngModel)]=\\\"email\\\"\\r\\n                 type=\\\"text\\\"\\r\\n                 placeholder=\\\"email\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 value={{currentUser.email}}>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div>\\r\\n        <button type=\\\"button\\\"\\r\\n                class=\\\"btn btn-success\\\"\\r\\n                (click)=\\\"updateUser(currentUser)\\\">\\r\\n          Update\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <h3>Your Sections</h3>\\r\\n      <li *ngFor=\\\"let enrollment of enrollments\\\" class=\\\"list-group-item\\\">\\r\\n        <button class=\\\"float-right btn btn-danger \\\"\\r\\n                (click)=\\\"unenroll(enrollment.section._id, enrollment.section.seats)\\\">\\r\\n          Un-enroll\\r\\n        </button>\\r\\n        {{enrollment.section.title}}, <b>{{enrollment.section.seats}}</b> seats remaining\\r\\n\\r\\n      </li>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserServiceClient} from '../services/user.service.client';\r\nimport {SectionServiceClient} from '../services/section.service.client';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  username: String;\r\n  firstName: String;\r\n  lastName: String;\r\n  email: String;\r\n  phone: String;\r\n  role: String;\r\n  currentUser = {\r\n    _id: 0,\r\n    username: String,\r\n    password: String,\r\n    firstName: String,\r\n    lastName: String,\r\n    email: String,\r\n    phone: String,\r\n    role: '',\r\n    address: String,\r\n    sections: []\r\n  };\r\n  enrollments = [];\r\n\r\n  constructor(private userService: UserServiceClient,\r\n              private sectionService: SectionServiceClient) {\r\n  }\r\n\r\n  updateUser(user) {\r\n    const newUser = {\r\n      username: this.username,\r\n      password: this.currentUser.password,\r\n      firstName: this.firstName,\r\n      lastName: this.lastName,\r\n      email: this.email,\r\n      phone: this.phone,\r\n      address: this.currentUser.address,\r\n      role: this.currentUser.role,\r\n      sections: this.currentUser.sections\r\n    };\r\n\r\n    this.userService.updateUser(newUser)\r\n      .then(response => response.ok)\r\n      .then(() => alert('Profile updated.'));\r\n  }\r\n\r\n  unenroll() {\r\n    // this.sectionService.unenroll()\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService.currentUser()\r\n      .then(user => {\r\n          this.currentUser = user;\r\n        }\r\n      )\r\n      .then(() => this.sectionService.findSectionsForStudent(this.currentUser._id))\r\n      .then(sections => this.enrollments = sections);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>Quizzes</h2>\\r\\n\\r\\n<ul class=\\\"list-group\\\">\\r\\n  <li *ngFor=\\\"let quiz of quizzes\\\"\\r\\n      class=\\\"list-group-item\\\">\\r\\n    {{quiz.title}}\\r\\n    <a class=\\\"float-right btn btn-primary\\\"\\r\\n       href=\\\"/quiz/{{quiz._id}}\\\">\\r\\n      Take\\r\\n    </a>\\r\\n  </li>\\r\\n</ul>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {QuizServiceClient} from \"../services/quiz.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-quiz-list',\r\n  templateUrl: './quiz-list.component.html',\r\n  styleUrls: ['./quiz-list.component.css']\r\n})\r\nexport class QuizListComponent implements OnInit {\r\n\r\n  quizzes = []\r\n\r\n  constructor(private service: QuizServiceClient) { }\r\n\r\n  ngOnInit() {\r\n    this.service.findAllQuizzes()\r\n      .then(quizzes => this.quizzes = quizzes)\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>Quiz Taker</h2>\\r\\n\\r\\n<h3>\\r\\n  <!--{{quiz.title}}-->\\r\\n  <button class=\\\"btn btn-primary float-right\\\"\\r\\n          (click)=\\\"submitQuiz(quiz)\\\">\\r\\n    Submit\\r\\n  </button>\\r\\n</h3>\\r\\n\\r\\n<ul class=\\\"list-group\\\">\\r\\n  <li class=\\\"list-group-item\\\">\\r\\n      <!--*ngFor=\\\"let question of quiz.questions\\\">-->\\r\\n    <h4>\\r\\n      <!--{{ question.title}}-->\\r\\n      <span class=\\\"float-right\\\">\\r\\n        <!--{{question.points}}-->\\r\\n      </span>\\r\\n    </h4>\\r\\n    <p>\\r\\n      <!--{{question.description}}-->\\r\\n    </p>\\r\\n    <!--<div [ngSwitch]=\\\"question.questionType\\\">-->\\r\\n\\r\\n      <!--<app-true-false-question-->\\r\\n        <!--[question]=\\\"question\\\"-->\\r\\n        <!--*ngSwitchCase=\\\"'TRUE_FALSE'\\\">-->\\r\\n      <!--</app-true-false-question>-->\\r\\n\\r\\n      <!--<app-fill-blanks-question-->\\r\\n        <!--[question]=\\\"question\\\"-->\\r\\n        <!--*ngSwitchCase=\\\"'FILL_BLANKS'\\\">-->\\r\\n      <!--</app-fill-blanks-question>-->\\r\\n\\r\\n      <!--<app-multiple-choice-question-->\\r\\n        <!--[question]=\\\"question\\\"-->\\r\\n        <!--*ngSwitchCase=\\\"'CHOICE'\\\">-->\\r\\n      <!--</app-multiple-choice-question>-->\\r\\n\\r\\n      <!--<app-essay-question-->\\r\\n        <!--[question]=\\\"question\\\"-->\\r\\n        <!--*ngSwitchCase=\\\"'ESSAY'\\\">-->\\r\\n      <!--</app-essay-question>-->\\r\\n\\r\\n    <!--</div>-->\\r\\n  </li>\\r\\n</ul>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {QuizServiceClient} from '../services/quiz.service.client';\r\n\r\n@Component({\r\n  selector: 'app-quiz-taker',\r\n  templateUrl: './quiz-taker.component.html',\r\n  styleUrls: ['./quiz-taker.component.css']\r\n})\r\nexport class QuizTakerComponent implements OnInit {\r\n\r\n  constructor(private service: QuizServiceClient,\r\n              private activatedRoute: ActivatedRoute) { }\r\n\r\n  quizId = ''\r\n  quiz = {};\r\n\r\n  submitQuiz = quiz =>\r\n    this.service\r\n      .submitQuiz(quiz)\r\n      .then(submission => console.log(submission))\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params\r\n      .subscribe(params => this.service\r\n        .findQuizById(params['quizId'])\r\n        .then(quiz => this.quiz = quiz));\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <h1>Register</h1>\\r\\n  <div>\\r\\n    <label>\\r\\n      Username\\r\\n    </label>\\r\\n    <input type=\\\"text\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           placeholder=\\\"alice\\\"\\r\\n           [(ngModel)]=\\\"username\\\">\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>\\r\\n      Password\\r\\n    </label>\\r\\n    <input type=\\\"password\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           [(ngModel)]=\\\"password\\\">\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>\\r\\n      Validate Password\\r\\n    </label>\\r\\n    <input type=\\\"password\\\"\\r\\n           class=\\\"form-control\\\"\\r\\n           [(ngModel)]=\\\"password2\\\">\\r\\n  </div>\\r\\n  <button class=\\\"btn btn-success\\\"\\r\\n          (click)=\\\"register( {\\r\\n          username: username,\\r\\n          password: password,\\r\\n          password2: password2\\r\\n          })\\\">\\r\\n    Register\\r\\n  </button>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {UserServiceClient} from '../services/user.service.client';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  username: '';\r\n  password: '';\r\n  password2: '';\r\n  constructor(private router: Router,\r\n              private userService: UserServiceClient) {\r\n  }\r\n\r\n  register = (user) => {\r\n    if (user.password === user.password2) {\r\n      const newUser = {\r\n        username: user.username,\r\n        password: user.password,\r\n        firstName: String,\r\n        lastName: String,\r\n        email: String,\r\n        phone: String,\r\n        role: 'student',\r\n        sections: []\r\n      };\r\n      if (user.username === 'admin' && user.password === 'admin') {\r\n        newUser.role = 'admin';\r\n      }\r\n      this.userService.register(newUser)\r\n        .then(status => {\r\n          if (status === 200) {\r\n            return this.router.navigate(['/profile']);\r\n          } else {\r\n            alert('Register failed. Username may already exist.');\r\n          }\r\n        });\r\n    } else {\r\n      alert('Passwords must match.');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"  <h2>Sections</h2>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active\\\">\\r\\n          Courses\\r\\n        </li>\\r\\n        <li (click)=\\\"selectCourse(course)\\\"\\r\\n            *ngFor=\\\"let course of courses\\\"\\r\\n            [ngClass]=\\\"{'active': course.id === selectedCourse.id}\\\"\\r\\n            class=\\\"list-group-item\\\">\\r\\n          {{course.title}} - ({{course.id}})\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active\\\">\\r\\n          Sections\\r\\n          <button *ngIf=\\\"currentUser.role === 'admin'\\\"\\r\\n                  (click)=\\\"addSection(section)\\\"\\r\\n                  class=\\\"btn btn-success btn-sm float-right\\\">Add\\r\\n          </button>\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\"\\r\\n            *ngIf=\\\"currentUser.role === 'admin'\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <input [(ngModel)]=\\\"section.name\\\"\\r\\n                     placeholder=\\\"name\\\"\\r\\n                     class=\\\"form-control\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <input [(ngModel)]=\\\"section.seats\\\"\\r\\n                     placeholder=\\\"seats\\\"\\r\\n                     class=\\\"form-control\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </li>\\r\\n\\r\\n        <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\r\\n          {{section.name}}: <b>{{section.seats}}</b> seats remaining\\r\\n          <button (click)=\\\"enroll(section._id)\\\"\\r\\n                  class=\\\"btn btn-secondary float-right\\\">\\r\\n            Enroll\\r\\n          </button>\\r\\n          <button *ngIf=\\\"currentUser.role === 'admin'\\\"\\r\\n                  (click)=\\\"deleteSection(section)\\\"\\r\\n                  class=\\\"btn btn-danger float-right\\\">\\r\\n            Delete\\r\\n          </button>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {CourseServiceClient} from '../services/course.service.client';\r\nimport {SectionServiceClient} from '../services/section.service.client';\r\nimport {UserServiceClient} from '../services/user.service.client';\r\n\r\n@Component({\r\n  selector: 'app-sections',\r\n  templateUrl: './sections.component.html',\r\n  styleUrls: ['./sections.component.css']\r\n})\r\nexport class SectionsComponent implements OnInit {\r\n  courses = [];\r\n  sections = [];\r\n  selectedCourse = {\r\n    title: '',\r\n    id: Number\r\n  };\r\n  section = {\r\n    _id: '',\r\n    name: '',\r\n    seats: 24\r\n  };\r\n  currentUser = {\r\n    _id: 0,\r\n    role: ''\r\n  };\r\n\r\n  constructor(private sectionService: SectionServiceClient,\r\n              private courseService: CourseServiceClient,\r\n              private userService: UserServiceClient) {\r\n  }\r\n\r\n  selectCourse = course => {\r\n    this.selectedCourse = course;\r\n    this.sectionService.findSectionsForCourse(course.id)\r\n      .then(sections => this.sections = sections);\r\n  };\r\n\r\n  addSection = (section) => {\r\n    section.courseId = this.selectedCourse.id;\r\n\r\n    this.sectionService.createSection(section)\r\n      .then(() => {\r\n        return this.sectionService.findSectionsForCourse(this.selectedCourse.id);\r\n      })\r\n      .then(sections => this.sections = sections);\r\n  };\r\n\r\n  deleteSection = (section) => {\r\n    this.sectionService.deleteSection(section._id)\r\n      .then(() => {\r\n        return this.sectionService.findSectionsForCourse(this.selectedCourse.id);\r\n      })\r\n      .then(sections => this.sections = sections);\r\n  };\r\n\r\n  enroll = (sectionId) => {\r\n    console.log(this.currentUser);\r\n    console.log(sectionId);\r\n    this.sectionService.enroll(this.currentUser._id, sectionId)\r\n      .then(response => response.json());\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.courseService.findAllCourses()\r\n      .then(courses => {\r\n        this.courses = courses;\r\n        this.userService.currentUser()\r\n          .then(user => this.currentUser = user);\r\n      });\r\n  }\r\n\r\n}\r\n","\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CourseServiceClient {\r\n  COURSE_API_URL = 'https://cs4550-summer2-2018-bk610.herokuapp.com/api/course';\r\n  findAllCourses() {\r\n    return fetch(this.COURSE_API_URL)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findAllModulesForCourse(courseId) {\r\n    return fetch(this.COURSE_API_URL + '/' + courseId + '/module')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class QuizServiceClient {\r\n  url = 'https://cs4550-bk610-node-server.herokuapp.com/api/quiz';\r\n\r\n  submitQuiz =  quiz =>\r\n    fetch(this.url + '/quiz/' + quiz._id + '/submission', {\r\n      method: 'post',\r\n      body: JSON.stringify(quiz),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n  createQuiz(quiz) {}\r\n  findAllQuizzes = () =>\r\n    fetch(this.url + '/quiz')\r\n      .then(response => response.json())\r\n  findQuizById = quizId =>\r\n    fetch(this.url + '/quiz/' + quizId)\r\n      .then(response => response.json())\r\n  updateQuiz(quizId, quiz) {}\r\n  deleteQuiz(quizId) {}\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SectionServiceClient {\r\n  // section_url = 'https://cs4550-bk610-node-server.herokuapp.com/api';\r\n  section_url = 'http://localhost:8080/api';\r\n  enroll = (studentId, sectionId) => {\r\n    console.log(studentId);\r\n    console.log(sectionId);\r\n    return fetch(this.section_url + '/student/' + studentId + '/section/' + sectionId, {\r\n      method: 'post',\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json());\r\n  };\r\n\r\n  findAllSections = () =>\r\n    fetch(this.section_url + '/section', {\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json());\r\n\r\n  findSectionsForCourse = courseId =>\r\n    fetch(this.section_url + '/course/' + courseId + '/section', {\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n\r\n  createSection = section =>\r\n    fetch(this.section_url + '/course/' + section.courseId + '/section', {\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(section)\r\n    })\r\n      .then(response => response.json());\r\n\r\n  deleteSection = (sectionId) => {\r\n    return fetch(this.section_url + '/section/' + sectionId, {\r\n      method: 'delete',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  };\r\n\r\n  findSectionsForStudent(studentId) {\r\n    return fetch(this.section_url + '/student/' + studentId + '/section', {\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class UserServiceClient {\r\n  url = 'https://cs4550-bk610-node-server.herokuapp.com/api';\r\n  // url = 'http://localhost:8080/api';\r\n  login = (user) => {\r\n    return fetch(this.url + '/login', {\r\n      method: 'post',\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    })\r\n      .then(response => response.status);\r\n  }\r\n  logout = () => {\r\n    return fetch(this.url + '/logout', {\r\n      method: 'post',\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.status);\r\n  }\r\n  currentUser = () => {\r\n    return fetch(this.url + '/current', {\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n  register = (user) => {\r\n    return fetch(this.url + '/register', {\r\n      method: 'post',\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    })\r\n      .then(response => response.status);\r\n  }\r\n  updateUser = (user) => {\r\n    return fetch(this.url + '/profile', {\r\n      method: 'put',\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(user)\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n  delete = () => {\r\n    return fetch(this.url + '/profile', {\r\n      method: 'delete',\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<label>\\r\\n  <input (click)=\\\"selected(true)\\\"\\r\\n         name=\\\"{{question._id}}\\\"\\r\\n         type=\\\"radio\\\">\\r\\n    True\\r\\n</label>\\r\\n<br/>\\r\\n<label>\\r\\n  <input (click)=\\\"selected(false)\\\"\\r\\n         name=\\\"{{question._id}}\\\"\\r\\n         type=\\\"radio\\\">\\r\\n    False\\r\\n</label>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-true-false-question',\r\n  templateUrl: './true-false-question.component.html',\r\n  styleUrls: ['./true-false-question.component.css']\r\n})\r\nexport class TrueFalseQuestionComponent implements OnInit {\r\n\r\n  @Input() question;\r\n\r\n  constructor() { }\r\n\r\n  selected = trueOrFalse => {\r\n    this.question.trueFalseAnswer = trueOrFalse;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}